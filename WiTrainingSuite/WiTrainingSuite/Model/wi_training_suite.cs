#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WiTrainingSuite.Model
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.Runtime.CompilerServices;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "wi_training_suite")]
    public partial class Wi_training_suite : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertTADMIN(TADMIN instance);
        partial void UpdateTADMIN(TADMIN instance);
        partial void DeleteTADMIN(TADMIN instance);
        partial void InsertTDEPARTMENT(TDEPARTMENT instance);
        partial void UpdateTDEPARTMENT(TDEPARTMENT instance);
        partial void DeleteTDEPARTMENT(TDEPARTMENT instance);
        partial void InsertTEMPDEPT(TEMPDEPT instance);
        partial void UpdateTEMPDEPT(TEMPDEPT instance);
        partial void DeleteTEMPDEPT(TEMPDEPT instance);
        partial void InsertTEMPEMAIL(TEMPEMAIL instance);
        partial void UpdateTEMPEMAIL(TEMPEMAIL instance);
        partial void DeleteTEMPEMAIL(TEMPEMAIL instance);
        partial void InsertTEMPLOYEE(TEMPLOYEE instance);
        partial void UpdateTEMPLOYEE(TEMPLOYEE instance);
        partial void DeleteTEMPLOYEE(TEMPLOYEE instance);
        partial void InsertTEMPNOTE(TEMPNOTE instance);
        partial void UpdateTEMPNOTE(TEMPNOTE instance);
        partial void DeleteTEMPNOTE(TEMPNOTE instance);
        partial void InsertTEMPROLE(TEMPROLE instance);
        partial void UpdateTEMPROLE(TEMPROLE instance);
        partial void DeleteTEMPROLE(TEMPROLE instance);
        partial void InsertTEMPSHIFT(TEMPSHIFT instance);
        partial void UpdateTEMPSHIFT(TEMPSHIFT instance);
        partial void DeleteTEMPSHIFT(TEMPSHIFT instance);
        partial void InsertTEMPSKILL(TEMPSKILL instance);
        partial void UpdateTEMPSKILL(TEMPSKILL instance);
        partial void DeleteTEMPSKILL(TEMPSKILL instance);
        partial void InsertTEMPSKILL_WIP(TEMPSKILL_WIP instance);
        partial void UpdateTEMPSKILL_WIP(TEMPSKILL_WIP instance);
        partial void DeleteTEMPSKILL_WIP(TEMPSKILL_WIP instance);
        partial void InsertTEMPTRAINING(TEMPTRAINING instance);
        partial void UpdateTEMPTRAINING(TEMPTRAINING instance);
        partial void DeleteTEMPTRAINING(TEMPTRAINING instance);
        partial void InsertTEMPTRAINING_WIP(TEMPTRAINING_WIP instance);
        partial void UpdateTEMPTRAINING_WIP(TEMPTRAINING_WIP instance);
        partial void DeleteTEMPTRAINING_WIP(TEMPTRAINING_WIP instance);
        partial void InsertTEMPVAR(TEMPVAR instance);
        partial void UpdateTEMPVAR(TEMPVAR instance);
        partial void DeleteTEMPVAR(TEMPVAR instance);
        partial void InsertTROLE(TROLE instance);
        partial void UpdateTROLE(TROLE instance);
        partial void DeleteTROLE(TROLE instance);
        partial void InsertTROLEVAR(TROLEVAR instance);
        partial void UpdateTROLEVAR(TROLEVAR instance);
        partial void DeleteTROLEVAR(TROLEVAR instance);
        partial void InsertTSHIFT(TSHIFT instance);
        partial void UpdateTSHIFT(TSHIFT instance);
        partial void DeleteTSHIFT(TSHIFT instance);
        partial void InsertTSKILL(TSKILL instance);
        partial void UpdateTSKILL(TSKILL instance);
        partial void DeleteTSKILL(TSKILL instance);
        partial void InsertTSKILLSW(TSKILLSW instance);
        partial void UpdateTSKILLSW(TSKILLSW instance);
        partial void DeleteTSKILLSW(TSKILLSW instance);
        partial void InsertTSORT(TSORT instance);
        partial void UpdateTSORT(TSORT instance);
        partial void DeleteTSORT(TSORT instance);
        partial void InsertTSTANDARDWORK(TSTANDARDWORK instance);
        partial void UpdateTSTANDARDWORK(TSTANDARDWORK instance);
        partial void DeleteTSTANDARDWORK(TSTANDARDWORK instance);
        partial void InsertTVARSKILL(TVARSKILL instance);
        partial void UpdateTVARSKILL(TVARSKILL instance);
        partial void DeleteTVARSKILL(TVARSKILL instance);
        #endregion

        public Wi_training_suite(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public Wi_training_suite(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public Wi_training_suite(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public Wi_training_suite(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<TADMIN> TADMIN
        {
            get
            {
                return this.GetTable<TADMIN>();
            }
        }

        public System.Data.Linq.Table<TDEPARTMENT> TDEPARTMENT
        {
            get
            {
                return this.GetTable<TDEPARTMENT>();
            }
        }

        public System.Data.Linq.Table<TDEPARTMENT_AUDIT> TDEPARTMENT_AUDIT
        {
            get
            {
                return this.GetTable<TDEPARTMENT_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPDEPT> TEMPDEPT
        {
            get
            {
                return this.GetTable<TEMPDEPT>();
            }
        }

        public System.Data.Linq.Table<TEMPDEPT_AUDIT> TEMPDEPT_AUDIT
        {
            get
            {
                return this.GetTable<TEMPDEPT_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPEMAIL> TEMPEMAIL
        {
            get
            {
                return this.GetTable<TEMPEMAIL>();
            }
        }

        public System.Data.Linq.Table<TEMPEMAIL_AUDIT> TEMPEMAIL_AUDIT
        {
            get
            {
                return this.GetTable<TEMPEMAIL_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPLOYEE> TEMPLOYEE
        {
            get
            {
                return this.GetTable<TEMPLOYEE>();
            }
        }

        public System.Data.Linq.Table<TEMPLOYEE_AUDIT> TEMPLOYEE_AUDIT
        {
            get
            {
                return this.GetTable<TEMPLOYEE_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPNOTE> TEMPNOTE
        {
            get
            {
                return this.GetTable<TEMPNOTE>();
            }
        }

        public System.Data.Linq.Table<TEMPNOTE_AUDIT> TEMPNOTE_AUDIT
        {
            get
            {
                return this.GetTable<TEMPNOTE_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPROLE> TEMPROLE
        {
            get
            {
                return this.GetTable<TEMPROLE>();
            }
        }

        public System.Data.Linq.Table<TEMPROLE_AUDIT> TEMPROLE_AUDIT
        {
            get
            {
                return this.GetTable<TEMPROLE_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPSHIFT> TEMPSHIFT
        {
            get
            {
                return this.GetTable<TEMPSHIFT>();
            }
        }

        public System.Data.Linq.Table<TEMPSHIFT_AUDIT> TEMPSHIFT_AUDIT
        {
            get
            {
                return this.GetTable<TEMPSHIFT_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPSKILL> TEMPSKILL
        {
            get
            {
                return this.GetTable<TEMPSKILL>();
            }
        }

        public System.Data.Linq.Table<TEMPSKILL_AUDIT> TEMPSKILL_AUDIT
        {
            get
            {
                return this.GetTable<TEMPSKILL_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPSKILL_WIP> TEMPSKILL_WIP
        {
            get
            {
                return this.GetTable<TEMPSKILL_WIP>();
            }
        }

        public System.Data.Linq.Table<TEMPTRAINING> TEMPTRAINING
        {
            get
            {
                return this.GetTable<TEMPTRAINING>();
            }
        }

        public System.Data.Linq.Table<TEMPTRAINING_AUDIT> TEMPTRAINING_AUDIT
        {
            get
            {
                return this.GetTable<TEMPTRAINING_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TEMPTRAINING_WIP> TEMPTRAINING_WIP
        {
            get
            {
                return this.GetTable<TEMPTRAINING_WIP>();
            }
        }

        public System.Data.Linq.Table<TEMPVAR> TEMPVAR
        {
            get
            {
                return this.GetTable<TEMPVAR>();
            }
        }

        public System.Data.Linq.Table<TEMPVAR_AUDIT> TEMPVAR_AUDIT
        {
            get
            {
                return this.GetTable<TEMPVAR_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TROLE> TROLE
        {
            get
            {
                return this.GetTable<TROLE>();
            }
        }

        public System.Data.Linq.Table<TROLE_AUDIT> TROLE_AUDIT
        {
            get
            {
                return this.GetTable<TROLE_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TROLEVAR> TROLEVAR
        {
            get
            {
                return this.GetTable<TROLEVAR>();
            }
        }

        public System.Data.Linq.Table<TROLEVAR_AUDIT> TROLEVAR_AUDIT
        {
            get
            {
                return this.GetTable<TROLEVAR_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TSHIFT> TSHIFT
        {
            get
            {
                return this.GetTable<TSHIFT>();
            }
        }

        public System.Data.Linq.Table<TSHIFT_AUDIT> TSHIFT_AUDIT
        {
            get
            {
                return this.GetTable<TSHIFT_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TSKILL> TSKILL
        {
            get
            {
                return this.GetTable<TSKILL>();
            }
        }

        public System.Data.Linq.Table<TSKILL_AUDIT> TSKILL_AUDIT
        {
            get
            {
                return this.GetTable<TSKILL_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TSKILLSW> TSKILLSW
        {
            get
            {
                return this.GetTable<TSKILLSW>();
            }
        }

        public System.Data.Linq.Table<TSKILLSW_AUDIT> TSKILLSW_AUDIT
        {
            get
            {
                return this.GetTable<TSKILLSW_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TSORT> TSORT
        {
            get
            {
                return this.GetTable<TSORT>();
            }
        }

        public System.Data.Linq.Table<TSTANDARDWORK> TSTANDARDWORK
        {
            get
            {
                return this.GetTable<TSTANDARDWORK>();
            }
        }

        public System.Data.Linq.Table<TSTANDARDWORK_AUDIT> TSTANDARDWORK_AUDIT
        {
            get
            {
                return this.GetTable<TSTANDARDWORK_AUDIT>();
            }
        }

        public System.Data.Linq.Table<TVARSKILL> TVARSKILL
        {
            get
            {
                return this.GetTable<TVARSKILL>();
            }
        }

        public System.Data.Linq.Table<TVARSKILL_AUDIT> TVARSKILL_AUDIT
        {
            get
            {
                return this.GetTable<TVARSKILL_AUDIT>();
            }
        }

        public System.Data.Linq.Table<VTRAINING> VTRAINING
        {
            get
            {
                return this.GetTable<VTRAINING>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fn_diagramobjects", IsComposable = true)]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public System.Nullable<int> Fn_diagramobjects()
        {
            return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPEMAIL_DELETE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPEMAIL_DELETE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPEMAIL_UPDATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPEMAIL_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMAIL", DbType = "VarChar(MAX)")] string eMAIL)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, eMAIL);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPLOYEE_CREATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPLOYEE_CREATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_FNAME", DbType = "VarChar(MAX)")] string eMP_FNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_LNAME", DbType = "VarChar(MAX)")] string eMP_LNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_INITIAL", DbType = "VarChar(MAX)")] string eMP_INITIAL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] ref System.Nullable<int> eMP_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_FNAME, eMP_LNAME, eMP_INITIAL, eMP_ID);
            eMP_ID = ((System.Nullable<int>)(result.GetParameterValue(3)));
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPLOYEE_LIST")]
        public ISingleResult<FnTEMPLOYEE_LISTResult> FnTEMPLOYEE_LIST()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<FnTEMPLOYEE_LISTResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPLOYEE_LOG", IsComposable = true)]
        public IQueryable<FnTEMPLOYEE_LOGResult> FnTEMPLOYEE_LOG([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPLOYEE_LOGResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPLOYEE_SELECT", IsComposable = true)]
        public IQueryable<FnTEMPLOYEE_SELECTResult> FnTEMPLOYEE_SELECT([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPLOYEE_SELECTResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPLOYEE_UPDATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPLOYEE_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_FNAME", DbType = "VarChar(MAX)")] string eMP_FNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_LNAME", DbType = "VarChar(MAX)")] string eMP_LNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_INITIAL", DbType = "VarChar(MAX)")] string eMP_INITIAL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DEPT_ID", DbType = "Int")] System.Nullable<int> dEPT_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VAR_ID", DbType = "Int")] System.Nullable<int> vAR_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SHIFT_ID", DbType = "Int")] System.Nullable<int> sHIFT_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_NOTE", DbType = "VarChar(MAX)")] string eMP_NOTE)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, eMP_FNAME, eMP_LNAME, eMP_INITIAL, dEPT_ID, vAR_ID, sHIFT_ID, eMP_NOTE);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPSKILL_ADD")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPSKILL_ADD([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SKILL_ID", DbType = "Int")] System.Nullable<int> sKILL_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, sKILL_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPSKILL_COMMIT")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPSKILL_COMMIT([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPSKILL_DEL")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPSKILL_DEL([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SKILL_ID", DbType = "Int")] System.Nullable<int> sKILL_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, sKILL_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPSKILL_PREP")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPSKILL_PREP([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPSKILL_SELECT", IsComposable = true)]
        public IQueryable<FnTEMPSKILL_SELECTResult> FnTEMPSKILL_SELECT([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPSKILL_SELECTResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_QUEUEADD")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPTRAINING_QUEUEADD([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_LEVEL", DbType = "Int")] System.Nullable<int> sW_LEVEL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VALIDDATE", DbType = "DateTime")] System.Nullable<System.DateTime> vALIDDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VALIDNOTE", DbType = "VarChar(MAX)")] string vALIDNOTE)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, sW_ID, sW_LEVEL, vALIDDATE, vALIDNOTE);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_QUEUECOMMITE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPTRAINING_QUEUECOMMITE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_QUEUECOMMITS")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPTRAINING_QUEUECOMMITS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_QUEUEDELETE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTEMPTRAINING_QUEUEDELETE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID, sW_ID);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_SELECTE", IsComposable = true)]
        public IQueryable<FnTEMPTRAINING_SELECTEResult> FnTEMPTRAINING_SELECTE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPTRAINING_SELECTEResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAINING_SELECTS", IsComposable = true)]
        public IQueryable<FnTEMPTRAINING_SELECTSResult> FnTEMPTRAINING_SELECTS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPTRAINING_SELECTSResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAININGROLEFILTER", IsComposable = true)]
        public IQueryable<FnTEMPTRAININGROLEFILTERResult> FnTEMPTRAININGROLEFILTER([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPTRAININGROLEFILTERResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTEMPTRAININGSKILLFILTER", IsComposable = true)]
        public IQueryable<FnTEMPTRAININGSKILLFILTERResult> FnTEMPTRAININGSKILLFILTER([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "EMP_ID", DbType = "Int")] System.Nullable<int> eMP_ID)
        {
            return this.CreateMethodCallQuery<FnTEMPTRAININGSKILLFILTERResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMP_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSORT", IsComposable = true)]
        public IQueryable<FnTSORTResult> FnTSORT([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TABLENAME", DbType = "VarChar(MAX)")] string tABLENAME)
        {
            return this.CreateMethodCallQuery<FnTSORTResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tABLENAME);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSORT_UPDATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTSORT_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TABLENAME", DbType = "VarChar(MAX)")] string tABLENAME, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SORT_ORDER", DbType = "VarChar(MAX)")] string sORT_ORDER)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tABLENAME, sORT_ORDER);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSTANDARDWORK_CREATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTSTANDARDWORK_CREATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_CODE", DbType = "VarChar(15)")] string sW_CODE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_DESCRIPTION", DbType = "VarChar(MAX)")] string sW_DESCRIPTION, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ISSUE", DbType = "Int")] System.Nullable<int> sW_ISSUE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ISSUEDATE", DbType = "DateTime")] System.Nullable<System.DateTime> sW_ISSUEDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_RA", DbType = "VarChar(MAX)")] string sW_RA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] ref System.Nullable<int> sW_ID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_CODE, sW_DESCRIPTION, sW_ISSUE, sW_ISSUEDATE, sW_RA, sW_ID);
            sW_ID = ((System.Nullable<int>)(result.GetParameterValue(5)));
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSTANDARDWORK_LIST")]
        public ISingleResult<FnTSTANDARDWORK_LISTResult> FnTSTANDARDWORK_LIST()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<FnTSTANDARDWORK_LISTResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSTANDARDWORK_LOG", IsComposable = true)]
        public IQueryable<FnTSTANDARDWORK_LOGResult> FnTSTANDARDWORK_LOG([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID)
        {
            return this.CreateMethodCallQuery<FnTSTANDARDWORK_LOGResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSTANDARDWORK_SELECT", IsComposable = true)]
        public IQueryable<FnTSTANDARDWORK_SELECTResult> FnTSTANDARDWORK_SELECT([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID)
        {
            return this.CreateMethodCallQuery<FnTSTANDARDWORK_SELECTResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_ID);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fnTSTANDARDWORK_UPDATE")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int FnTSTANDARDWORK_UPDATE([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ID", DbType = "Int")] System.Nullable<int> sW_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_CODE", DbType = "VarChar(MAX)")] string sW_CODE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_DESCRIPTION", DbType = "VarChar(MAX)")] string sW_DESCRIPTION, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ISSUE", DbType = "Int")] System.Nullable<int> sW_ISSUE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_ISSUEDATE", DbType = "DateTime")] System.Nullable<System.DateTime> sW_ISSUEDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SW_RA", DbType = "VarChar(MAX)")] string sW_RA)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sW_ID, sW_CODE, sW_DESCRIPTION, sW_ISSUE, sW_ISSUEDATE, sW_RA);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_alterdiagram")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int Sp_alterdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarBinary(MAX)")] System.Data.Linq.Binary definition)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_creatediagram")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int Sp_creatediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarBinary(MAX)")] System.Data.Linq.Binary definition)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_dropdiagram")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int Sp_dropdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_helpdiagramdefinition")]
        public ISingleResult<Sp_helpdiagramdefinitionResult> Sp_helpdiagramdefinition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
            return ((ISingleResult<Sp_helpdiagramdefinitionResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_helpdiagrams")]
        public ISingleResult<Sp_helpdiagramsResult> Sp_helpdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
            return ((ISingleResult<Sp_helpdiagramsResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.sp_renamediagram")]
        [return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")]
        public int Sp_renamediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(128)")] string new_diagramname)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SplitStrings", IsComposable = true)]
        public IQueryable<SplitStringsResult> SplitStrings([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "List", DbType = "NVarChar(MAX)")] string list, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Delimiter", DbType = "NVarChar(255)")] string delimiter)
        {
            return this.CreateMethodCallQuery<SplitStringsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), list, delimiter);
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TADMIN")]
    public partial class TADMIN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private string _USERNAME;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnUSERNAMEChanging(string value);
        partial void OnUSERNAMEChanged();
        #endregion

        public TADMIN()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USERNAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string USERNAME
        {
            get
            {
                return this._USERNAME;
            }
            set
            {
                if ((this._USERNAME != value))
                {
                    this.OnUSERNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._USERNAME = value;
                    this.SendPropertyChanged("USERNAME");
                    this.OnUSERNAMEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TDEPARTMENT")]
    public partial class TDEPARTMENT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _DEPT_ID;

        private string _DEPT_NAME;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDEPT_IDChanging(int value);
        partial void OnDEPT_IDChanged();
        partial void OnDEPT_NAMEChanging(string value);
        partial void OnDEPT_NAMEChanged();
        #endregion

        public TDEPARTMENT()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this.OnDEPT_IDChanging(value);
                    this.SendPropertyChanging();
                    this._DEPT_ID = value;
                    this.SendPropertyChanged("DEPT_ID");
                    this.OnDEPT_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string DEPT_NAME
        {
            get
            {
                return this._DEPT_NAME;
            }
            set
            {
                if ((this._DEPT_NAME != value))
                {
                    this.OnDEPT_NAMEChanging(value);
                    this.SendPropertyChanging();
                    this._DEPT_NAME = value;
                    this.SendPropertyChanged("DEPT_NAME");
                    this.OnDEPT_NAMEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TDEPARTMENT_AUDIT")]
    public partial class TDEPARTMENT_AUDIT
    {

        private long _AUDITID;

        private int _DEPT_ID;

        private string _DEPT_NAME;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TDEPARTMENT_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", DbType = "Int NOT NULL")]
        public int DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this._DEPT_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string DEPT_NAME
        {
            get
            {
                return this._DEPT_NAME;
            }
            set
            {
                if ((this._DEPT_NAME != value))
                {
                    this._DEPT_NAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPDEPT")]
    public partial class TEMPDEPT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _DEPT_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnDEPT_IDChanging(int value);
        partial void OnDEPT_IDChanged();
        #endregion

        public TEMPDEPT()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", DbType = "Int NOT NULL")]
        public int DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this.OnDEPT_IDChanging(value);
                    this.SendPropertyChanging();
                    this._DEPT_ID = value;
                    this.SendPropertyChanged("DEPT_ID");
                    this.OnDEPT_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPDEPT_AUDIT")]
    public partial class TEMPDEPT_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private int _DEPT_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPDEPT_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", DbType = "Int NOT NULL")]
        public int DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this._DEPT_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPEMAIL")]
    public partial class TEMPEMAIL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private string _EMAIL;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        #endregion

        public TEMPEMAIL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if ((this._EMAIL != value))
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging();
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPEMAIL_AUDIT")]
    public partial class TEMPEMAIL_AUDIT
    {

        private int _ID;

        private int _EMP_ID;

        private string _EMAIL;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPEMAIL_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if ((this._EMAIL != value))
                {
                    this._EMAIL = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPLOYEE")]
    public partial class TEMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _EMP_ID;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnEMP_FNAMEChanging(string value);
        partial void OnEMP_FNAMEChanged();
        partial void OnEMP_LNAMEChanging(string value);
        partial void OnEMP_LNAMEChanged();
        partial void OnEMP_INITIALChanging(string value);
        partial void OnEMP_INITIALChanged();
        #endregion

        public TEMPLOYEE()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this.OnEMP_FNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_FNAME = value;
                    this.SendPropertyChanged("EMP_FNAME");
                    this.OnEMP_FNAMEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this.OnEMP_LNAMEChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_LNAME = value;
                    this.SendPropertyChanged("EMP_LNAME");
                    this.OnEMP_LNAMEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this.OnEMP_INITIALChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_INITIAL = value;
                    this.SendPropertyChanged("EMP_INITIAL");
                    this.OnEMP_INITIALChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPLOYEE_AUDIT")]
    public partial class TEMPLOYEE_AUDIT
    {

        private long _AUDITID;

        private int _EMP_ID;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPLOYEE_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this._EMP_FNAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this._EMP_LNAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this._EMP_INITIAL = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPNOTE")]
    public partial class TEMPNOTE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private string _EMP_NOTE;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnEMP_NOTEChanging(string value);
        partial void OnEMP_NOTEChanged();
        #endregion

        public TEMPNOTE()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_NOTE", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string EMP_NOTE
        {
            get
            {
                return this._EMP_NOTE;
            }
            set
            {
                if ((this._EMP_NOTE != value))
                {
                    this.OnEMP_NOTEChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_NOTE = value;
                    this.SendPropertyChanged("EMP_NOTE");
                    this.OnEMP_NOTEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPNOTE_AUDIT")]
    public partial class TEMPNOTE_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private string _EMP_NOTE;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPNOTE_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_NOTE", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string EMP_NOTE
        {
            get
            {
                return this._EMP_NOTE;
            }
            set
            {
                if ((this._EMP_NOTE != value))
                {
                    this._EMP_NOTE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPROLE")]
    public partial class TEMPROLE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _ROLE_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnROLE_IDChanging(int value);
        partial void OnROLE_IDChanged();
        #endregion

        public TEMPROLE()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int NOT NULL")]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this.OnROLE_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ROLE_ID = value;
                    this.SendPropertyChanged("ROLE_ID");
                    this.OnROLE_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPROLE_AUDIT")]
    public partial class TEMPROLE_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private int _ROLE_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPROLE_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int NOT NULL")]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this._ROLE_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPSHIFT")]
    public partial class TEMPSHIFT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _SHIFT_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnSHIFT_IDChanging(int value);
        partial void OnSHIFT_IDChanged();
        #endregion

        public TEMPSHIFT()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int NOT NULL")]
        public int SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this.OnSHIFT_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SHIFT_ID = value;
                    this.SendPropertyChanged("SHIFT_ID");
                    this.OnSHIFT_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPSHIFT_AUDIT")]
    public partial class TEMPSHIFT_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private int _SHIFT_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPSHIFT_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int NOT NULL")]
        public int SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this._SHIFT_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPSKILL")]
    public partial class TEMPSKILL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _SKILL_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnSKILL_IDChanging(int value);
        partial void OnSKILL_IDChanged();
        #endregion

        public TEMPSKILL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this.OnSKILL_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_ID = value;
                    this.SendPropertyChanged("SKILL_ID");
                    this.OnSKILL_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPSKILL_AUDIT")]
    public partial class TEMPSKILL_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private int _SKILL_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPSKILL_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this._SKILL_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPSKILL_WIP")]
    public partial class TEMPSKILL_WIP : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _SKILL_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnSKILL_IDChanging(int value);
        partial void OnSKILL_IDChanged();
        #endregion

        public TEMPSKILL_WIP()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this.OnSKILL_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_ID = value;
                    this.SendPropertyChanged("SKILL_ID");
                    this.OnSKILL_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPTRAINING")]
    public partial class TEMPTRAINING : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _SW_ID;

        private int _SW_LEVEL;

        private System.DateTime _VALIDDATE;

        private string _VALIDNOTE;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnSW_IDChanging(int value);
        partial void OnSW_IDChanged();
        partial void OnSW_LEVELChanging(int value);
        partial void OnSW_LEVELChanged();
        partial void OnVALIDDATEChanging(System.DateTime value);
        partial void OnVALIDDATEChanged();
        partial void OnVALIDNOTEChanging(string value);
        partial void OnVALIDNOTEChanged();
        #endregion

        public TEMPTRAINING()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this.OnSW_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ID = value;
                    this.SendPropertyChanged("SW_ID");
                    this.OnSW_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int NOT NULL")]
        public int SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this.OnSW_LEVELChanging(value);
                    this.SendPropertyChanging();
                    this._SW_LEVEL = value;
                    this.SendPropertyChanged("SW_LEVEL");
                    this.OnSW_LEVELChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this.OnVALIDDATEChanging(value);
                    this.SendPropertyChanging();
                    this._VALIDDATE = value;
                    this.SendPropertyChanged("VALIDDATE");
                    this.OnVALIDDATEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDNOTE", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string VALIDNOTE
        {
            get
            {
                return this._VALIDNOTE;
            }
            set
            {
                if ((this._VALIDNOTE != value))
                {
                    this.OnVALIDNOTEChanging(value);
                    this.SendPropertyChanging();
                    this._VALIDNOTE = value;
                    this.SendPropertyChanged("VALIDNOTE");
                    this.OnVALIDNOTEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPTRAINING_AUDIT")]
    public partial class TEMPTRAINING_AUDIT
    {

        private int _AUDIT_ID;

        private int _ID;

        private int _EMP_ID;

        private int _SW_ID;

        private int _SW_LEVEL;

        private System.DateTime _VALIDDATE;

        private string _VALIDNOTE;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPTRAINING_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDIT_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int AUDIT_ID
        {
            get
            {
                return this._AUDIT_ID;
            }
            set
            {
                if ((this._AUDIT_ID != value))
                {
                    this._AUDIT_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int NOT NULL")]
        public int SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this._SW_LEVEL = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this._VALIDDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDNOTE", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string VALIDNOTE
        {
            get
            {
                return this._VALIDNOTE;
            }
            set
            {
                if ((this._VALIDNOTE != value))
                {
                    this._VALIDNOTE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPTRAINING_WIP")]
    public partial class TEMPTRAINING_WIP : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _SW_ID;

        private int _SW_LEVEL;

        private System.DateTime _VALIDDATE;

        private string _VALIDNOTE;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnSW_IDChanging(int value);
        partial void OnSW_IDChanged();
        partial void OnSW_LEVELChanging(int value);
        partial void OnSW_LEVELChanged();
        partial void OnVALIDDATEChanging(System.DateTime value);
        partial void OnVALIDDATEChanged();
        partial void OnVALIDNOTEChanging(string value);
        partial void OnVALIDNOTEChanged();
        #endregion

        public TEMPTRAINING_WIP()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this.OnSW_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ID = value;
                    this.SendPropertyChanged("SW_ID");
                    this.OnSW_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int NOT NULL")]
        public int SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this.OnSW_LEVELChanging(value);
                    this.SendPropertyChanging();
                    this._SW_LEVEL = value;
                    this.SendPropertyChanged("SW_LEVEL");
                    this.OnSW_LEVELChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this.OnVALIDDATEChanging(value);
                    this.SendPropertyChanging();
                    this._VALIDDATE = value;
                    this.SendPropertyChanged("VALIDDATE");
                    this.OnVALIDDATEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDNOTE", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string VALIDNOTE
        {
            get
            {
                return this._VALIDNOTE;
            }
            set
            {
                if ((this._VALIDNOTE != value))
                {
                    this.OnVALIDNOTEChanging(value);
                    this.SendPropertyChanging();
                    this._VALIDNOTE = value;
                    this.SendPropertyChanged("VALIDNOTE");
                    this.OnVALIDNOTEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPVAR")]
    public partial class TEMPVAR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _EMP_ID;

        private int _VAR_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnEMP_IDChanging(int value);
        partial void OnEMP_IDChanged();
        partial void OnVAR_IDChanging(int value);
        partial void OnVAR_IDChanged();
        #endregion

        public TEMPVAR()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this.OnEMP_IDChanging(value);
                    this.SendPropertyChanging();
                    this._EMP_ID = value;
                    this.SendPropertyChanged("EMP_ID");
                    this.OnEMP_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int NOT NULL")]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this.OnVAR_IDChanging(value);
                    this.SendPropertyChanging();
                    this._VAR_ID = value;
                    this.SendPropertyChanged("VAR_ID");
                    this.OnVAR_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TEMPVAR_AUDIT")]
    public partial class TEMPVAR_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _EMP_ID;

        private int _VAR_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TEMPVAR_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int NOT NULL")]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this._VAR_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TROLE")]
    public partial class TROLE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ROLE_ID;

        private string _ROLE_NAME;

        private bool _ROLE_EMAIL;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnROLE_IDChanging(int value);
        partial void OnROLE_IDChanged();
        partial void OnROLE_NAMEChanging(string value);
        partial void OnROLE_NAMEChanged();
        partial void OnROLE_EMAILChanging(bool value);
        partial void OnROLE_EMAILChanged();
        #endregion

        public TROLE()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this.OnROLE_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ROLE_ID = value;
                    this.SendPropertyChanged("ROLE_ID");
                    this.OnROLE_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string ROLE_NAME
        {
            get
            {
                return this._ROLE_NAME;
            }
            set
            {
                if ((this._ROLE_NAME != value))
                {
                    this.OnROLE_NAMEChanging(value);
                    this.SendPropertyChanging();
                    this._ROLE_NAME = value;
                    this.SendPropertyChanged("ROLE_NAME");
                    this.OnROLE_NAMEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_EMAIL", DbType = "Bit NOT NULL")]
        public bool ROLE_EMAIL
        {
            get
            {
                return this._ROLE_EMAIL;
            }
            set
            {
                if ((this._ROLE_EMAIL != value))
                {
                    this.OnROLE_EMAILChanging(value);
                    this.SendPropertyChanging();
                    this._ROLE_EMAIL = value;
                    this.SendPropertyChanged("ROLE_EMAIL");
                    this.OnROLE_EMAILChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TROLE_AUDIT")]
    public partial class TROLE_AUDIT
    {

        private long _AUDITID;

        private int _ROLE_ID;

        private string _ROLE_NAME;

        private bool _ROLE_EMAIL;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TROLE_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int NOT NULL")]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this._ROLE_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string ROLE_NAME
        {
            get
            {
                return this._ROLE_NAME;
            }
            set
            {
                if ((this._ROLE_NAME != value))
                {
                    this._ROLE_NAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_EMAIL", DbType = "Bit NOT NULL")]
        public bool ROLE_EMAIL
        {
            get
            {
                return this._ROLE_EMAIL;
            }
            set
            {
                if ((this._ROLE_EMAIL != value))
                {
                    this._ROLE_EMAIL = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TROLEVAR")]
    public partial class TROLEVAR : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _VAR_ID;

        private int _ROLE_ID;

        private string _VAR_NAME;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnVAR_IDChanging(int value);
        partial void OnVAR_IDChanged();
        partial void OnROLE_IDChanging(int value);
        partial void OnROLE_IDChanged();
        partial void OnVAR_NAMEChanging(string value);
        partial void OnVAR_NAMEChanged();
        #endregion

        public TROLEVAR()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this.OnVAR_IDChanging(value);
                    this.SendPropertyChanging();
                    this._VAR_ID = value;
                    this.SendPropertyChanged("VAR_ID");
                    this.OnVAR_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int NOT NULL")]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this.OnROLE_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ROLE_ID = value;
                    this.SendPropertyChanged("ROLE_ID");
                    this.OnROLE_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this.OnVAR_NAMEChanging(value);
                    this.SendPropertyChanging();
                    this._VAR_NAME = value;
                    this.SendPropertyChanged("VAR_NAME");
                    this.OnVAR_NAMEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TROLEVAR_AUDIT")]
    public partial class TROLEVAR_AUDIT
    {

        private int _AUDITID;

        private int _VAR_ID;

        private int _ROLE_ID;

        private string _VAR_NAME;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TROLEVAR_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int NOT NULL")]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this._VAR_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int NOT NULL")]
        public int ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this._ROLE_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this._VAR_NAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSHIFT")]
    public partial class TSHIFT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SHIFT_ID;

        private string _SHIFT_NAME;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSHIFT_IDChanging(int value);
        partial void OnSHIFT_IDChanged();
        partial void OnSHIFT_NAMEChanging(string value);
        partial void OnSHIFT_NAMEChanged();
        #endregion

        public TSHIFT()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this.OnSHIFT_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SHIFT_ID = value;
                    this.SendPropertyChanged("SHIFT_ID");
                    this.OnSHIFT_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this.OnSHIFT_NAMEChanging(value);
                    this.SendPropertyChanging();
                    this._SHIFT_NAME = value;
                    this.SendPropertyChanged("SHIFT_NAME");
                    this.OnSHIFT_NAMEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSHIFT_AUDIT")]
    public partial class TSHIFT_AUDIT
    {

        private long _AUDITID;

        private int _SHIFT_ID;

        private string _SHIFT_NAME;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TSHIFT_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int NOT NULL")]
        public int SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this._SHIFT_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSKILL")]
    public partial class TSKILL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SKILL_ID;

        private string _SKILL_NAME;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSKILL_IDChanging(int value);
        partial void OnSKILL_IDChanged();
        partial void OnSKILL_NAMEChanging(string value);
        partial void OnSKILL_NAMEChanged();
        #endregion

        public TSKILL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this.OnSKILL_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_ID = value;
                    this.SendPropertyChanged("SKILL_ID");
                    this.OnSKILL_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SKILL_NAME
        {
            get
            {
                return this._SKILL_NAME;
            }
            set
            {
                if ((this._SKILL_NAME != value))
                {
                    this.OnSKILL_NAMEChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_NAME = value;
                    this.SendPropertyChanged("SKILL_NAME");
                    this.OnSKILL_NAMEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSKILL_AUDIT")]
    public partial class TSKILL_AUDIT
    {

        private long _AUDITID;

        private int _SKILL_ID;

        private string _SKILL_NAME;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TSKILL_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this._SKILL_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_NAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SKILL_NAME
        {
            get
            {
                return this._SKILL_NAME;
            }
            set
            {
                if ((this._SKILL_NAME != value))
                {
                    this._SKILL_NAME = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSKILLSW")]
    public partial class TSKILLSW : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _SKILL_ID;

        private int _SW_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnSKILL_IDChanging(int value);
        partial void OnSKILL_IDChanged();
        partial void OnSW_IDChanging(int value);
        partial void OnSW_IDChanged();
        #endregion

        public TSKILLSW()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this.OnSKILL_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_ID = value;
                    this.SendPropertyChanged("SKILL_ID");
                    this.OnSKILL_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this.OnSW_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ID = value;
                    this.SendPropertyChanged("SW_ID");
                    this.OnSW_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSKILLSW_AUDIT")]
    public partial class TSKILLSW_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _SKILL_ID;

        private int _SW_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TSKILLSW_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this._SKILL_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSORT")]
    public partial class TSORT : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private string _TABLENAME;

        private string _ID_COLUMN;

        private string _SORT_ORDER;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnTABLENAMEChanging(string value);
        partial void OnTABLENAMEChanged();
        partial void OnID_COLUMNChanging(string value);
        partial void OnID_COLUMNChanged();
        partial void OnSORT_ORDERChanging(string value);
        partial void OnSORT_ORDERChanged();
        #endregion

        public TSORT()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TABLENAME", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string TABLENAME
        {
            get
            {
                return this._TABLENAME;
            }
            set
            {
                if ((this._TABLENAME != value))
                {
                    this.OnTABLENAMEChanging(value);
                    this.SendPropertyChanging();
                    this._TABLENAME = value;
                    this.SendPropertyChanged("TABLENAME");
                    this.OnTABLENAMEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID_COLUMN", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string ID_COLUMN
        {
            get
            {
                return this._ID_COLUMN;
            }
            set
            {
                if ((this._ID_COLUMN != value))
                {
                    this.OnID_COLUMNChanging(value);
                    this.SendPropertyChanging();
                    this._ID_COLUMN = value;
                    this.SendPropertyChanged("ID_COLUMN");
                    this.OnID_COLUMNChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SORT_ORDER", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SORT_ORDER
        {
            get
            {
                return this._SORT_ORDER;
            }
            set
            {
                if ((this._SORT_ORDER != value))
                {
                    this.OnSORT_ORDERChanging(value);
                    this.SendPropertyChanging();
                    this._SORT_ORDER = value;
                    this.SendPropertyChanged("SORT_ORDER");
                    this.OnSORT_ORDERChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSTANDARDWORK")]
    public partial class TSTANDARDWORK : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SW_ID;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private int _SW_ISSUE;

        private System.DateTime _SW_ISSUEDATE;

        private string _SW_RA;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSW_IDChanging(int value);
        partial void OnSW_IDChanged();
        partial void OnSW_CODEChanging(string value);
        partial void OnSW_CODEChanged();
        partial void OnSW_DESCRIPTIONChanging(string value);
        partial void OnSW_DESCRIPTIONChanged();
        partial void OnSW_ISSUEChanging(int value);
        partial void OnSW_ISSUEChanged();
        partial void OnSW_ISSUEDATEChanging(System.DateTime value);
        partial void OnSW_ISSUEDATEChanged();
        partial void OnSW_RAChanging(string value);
        partial void OnSW_RAChanged();
        #endregion

        public TSTANDARDWORK()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this.OnSW_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ID = value;
                    this.SendPropertyChanged("SW_ID");
                    this.OnSW_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(15) NOT NULL", CanBeNull = false)]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this.OnSW_CODEChanging(value);
                    this.SendPropertyChanging();
                    this._SW_CODE = value;
                    this.SendPropertyChanged("SW_CODE");
                    this.OnSW_CODEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this.OnSW_DESCRIPTIONChanging(value);
                    this.SendPropertyChanging();
                    this._SW_DESCRIPTION = value;
                    this.SendPropertyChanged("SW_DESCRIPTION");
                    this.OnSW_DESCRIPTIONChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int NOT NULL")]
        public int SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this.OnSW_ISSUEChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ISSUE = value;
                    this.SendPropertyChanged("SW_ISSUE");
                    this.OnSW_ISSUEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this.OnSW_ISSUEDATEChanging(value);
                    this.SendPropertyChanging();
                    this._SW_ISSUEDATE = value;
                    this.SendPropertyChanged("SW_ISSUEDATE");
                    this.OnSW_ISSUEDATEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this.OnSW_RAChanging(value);
                    this.SendPropertyChanging();
                    this._SW_RA = value;
                    this.SendPropertyChanged("SW_RA");
                    this.OnSW_RAChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TSTANDARDWORK_AUDIT")]
    public partial class TSTANDARDWORK_AUDIT
    {

        private long _AUDITID;

        private int _SW_ID;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private int _SW_ISSUE;

        private System.DateTime _SW_ISSUEDATE;

        private string _SW_RA;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TSTANDARDWORK_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(15) NOT NULL", CanBeNull = false)]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int NOT NULL")]
        public int SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this._SW_ISSUE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this._SW_ISSUEDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this._SW_RA = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TVARSKILL")]
    public partial class TVARSKILL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ID;

        private int _VAR_ID;

        private int _SKILL_ID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnVAR_IDChanging(int value);
        partial void OnVAR_IDChanged();
        partial void OnSKILL_IDChanging(int value);
        partial void OnSKILL_IDChanged();
        #endregion

        public TVARSKILL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int NOT NULL")]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this.OnVAR_IDChanging(value);
                    this.SendPropertyChanging();
                    this._VAR_ID = value;
                    this.SendPropertyChanged("VAR_ID");
                    this.OnVAR_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this.OnSKILL_IDChanging(value);
                    this.SendPropertyChanging();
                    this._SKILL_ID = value;
                    this.SendPropertyChanged("SKILL_ID");
                    this.OnSKILL_IDChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TVARSKILL_AUDIT")]
    public partial class TVARSKILL_AUDIT
    {

        private long _AUDITID;

        private int _ID;

        private int _VAR_ID;

        private int _SKILL_ID;

        private string _AUDITACTION;

        private System.DateTime _AUDITDATE;

        private string _AUDITUSER;

        private string _AUDITAPP;

        public TVARSKILL_AUDIT()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITID", AutoSync = AutoSync.Always, DbType = "BigInt NOT NULL IDENTITY", IsDbGenerated = true)]
        public long AUDITID
        {
            get
            {
                return this._AUDITID;
            }
            set
            {
                if ((this._AUDITID != value))
                {
                    this._AUDITID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int NOT NULL")]
        public int VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this._VAR_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int NOT NULL")]
        public int SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this._SKILL_ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITACTION", DbType = "Char(1) NOT NULL", CanBeNull = false)]
        public string AUDITACTION
        {
            get
            {
                return this._AUDITACTION;
            }
            set
            {
                if ((this._AUDITACTION != value))
                {
                    this._AUDITACTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime AUDITDATE
        {
            get
            {
                return this._AUDITDATE;
            }
            set
            {
                if ((this._AUDITDATE != value))
                {
                    this._AUDITDATE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITUSER", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string AUDITUSER
        {
            get
            {
                return this._AUDITUSER;
            }
            set
            {
                if ((this._AUDITUSER != value))
                {
                    this._AUDITUSER = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AUDITAPP", DbType = "VarChar(128) NOT NULL", CanBeNull = false)]
        public string AUDITAPP
        {
            get
            {
                return this._AUDITAPP;
            }
            set
            {
                if ((this._AUDITAPP != value))
                {
                    this._AUDITAPP = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.VTRAINING")]
    public partial class VTRAINING : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private string _Name;

        private string _SHIFT_NAME;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private int _SW_LEVEL;

        private System.DateTime _VALIDDATE;

        private int _EMP_ID;

        private int _SW_ID;

        private System.Nullable<int> _SHIFT_ID;

        public VTRAINING()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(15)")]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int NOT NULL")]
        public int SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this._SW_LEVEL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime NOT NULL")]
        public System.DateTime VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this._VALIDDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int NOT NULL")]
        public int EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int NOT NULL")]
        public int SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int")]
        public System.Nullable<int> SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this._SHIFT_ID = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPLOYEE_LISTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _EMP_ID;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        private System.Nullable<int> _DEPT_ID;

        private System.Nullable<int> _ROLE_ID;

        private System.Nullable<int> _VAR_ID;

        private System.Nullable<int> _SHIFT_ID;

        private string _EMAIL;

        private string _DEPT_NAME;

        private string _ROLE_NAME;

        private string _SHIFT_NAME;

        private string _VAR_NAME;

        private string _EMP_NOTE;

        public FnTEMPLOYEE_LISTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int")]
        public System.Nullable<int> EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX)")]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this._EMP_FNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX)")]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this._EMP_LNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "VarChar(MAX)")]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this._EMP_INITIAL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", DbType = "Int")]
        public System.Nullable<int> DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this._DEPT_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int")]
        public System.Nullable<int> ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this._ROLE_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int")]
        public System.Nullable<int> VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this._VAR_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int")]
        public System.Nullable<int> SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this._SHIFT_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(MAX)")]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if ((this._EMAIL != value))
                {
                    this._EMAIL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_NAME", DbType = "VarChar(MAX)")]
        public string DEPT_NAME
        {
            get
            {
                return this._DEPT_NAME;
            }
            set
            {
                if ((this._DEPT_NAME != value))
                {
                    this._DEPT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_NAME", DbType = "VarChar(MAX)")]
        public string ROLE_NAME
        {
            get
            {
                return this._ROLE_NAME;
            }
            set
            {
                if ((this._ROLE_NAME != value))
                {
                    this._ROLE_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX)")]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX)")]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this._VAR_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_NOTE", DbType = "VarChar(MAX)")]
        public string EMP_NOTE
        {
            get
            {
                return this._EMP_NOTE;
            }
            set
            {
                if ((this._EMP_NOTE != value))
                {
                    this._EMP_NOTE = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPLOYEE_LOGResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private string _Table;

        private string _Action;

        private string _Detail;

        private System.Nullable<System.DateTime> _TimeStamp;

        public FnTEMPLOYEE_LOGResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Table", DbType = "VarChar(MAX)")]
        public string Table
        {
            get
            {
                return this._Table;
            }
            set
            {
                if ((this._Table != value))
                {
                    this._Table = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Action", DbType = "VarChar(1)")]
        public string Action
        {
            get
            {
                return this._Action;
            }
            set
            {
                if ((this._Action != value))
                {
                    this._Action = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Detail", DbType = "VarChar(MAX)")]
        public string Detail
        {
            get
            {
                return this._Detail;
            }
            set
            {
                if ((this._Detail != value))
                {
                    this._Detail = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeStamp", DbType = "DateTime")]
        public System.Nullable<System.DateTime> TimeStamp
        {
            get
            {
                return this._TimeStamp;
            }
            set
            {
                if ((this._TimeStamp != value))
                {
                    this._TimeStamp = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPLOYEE_SELECTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _EMP_ID;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        private System.Nullable<int> _DEPT_ID;

        private System.Nullable<int> _ROLE_ID;

        private System.Nullable<int> _SHIFT_ID;

        private System.Nullable<int> _VAR_ID;

        private string _EMAIL;

        private string _DEPT_NAME;

        private string _ROLE_NAME;

        private string _SHIFT_NAME;

        private string _VAR_NAME;

        private string _EMP_NOTE;

        public FnTEMPLOYEE_SELECTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int")]
        public System.Nullable<int> EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX)")]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this._EMP_FNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX)")]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this._EMP_LNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "VarChar(MAX)")]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this._EMP_INITIAL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_ID", DbType = "Int")]
        public System.Nullable<int> DEPT_ID
        {
            get
            {
                return this._DEPT_ID;
            }
            set
            {
                if ((this._DEPT_ID != value))
                {
                    this._DEPT_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_ID", DbType = "Int")]
        public System.Nullable<int> ROLE_ID
        {
            get
            {
                return this._ROLE_ID;
            }
            set
            {
                if ((this._ROLE_ID != value))
                {
                    this._ROLE_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_ID", DbType = "Int")]
        public System.Nullable<int> SHIFT_ID
        {
            get
            {
                return this._SHIFT_ID;
            }
            set
            {
                if ((this._SHIFT_ID != value))
                {
                    this._SHIFT_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_ID", DbType = "Int")]
        public System.Nullable<int> VAR_ID
        {
            get
            {
                return this._VAR_ID;
            }
            set
            {
                if ((this._VAR_ID != value))
                {
                    this._VAR_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMAIL", DbType = "VarChar(MAX)")]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if ((this._EMAIL != value))
                {
                    this._EMAIL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DEPT_NAME", DbType = "VarChar(MAX)")]
        public string DEPT_NAME
        {
            get
            {
                return this._DEPT_NAME;
            }
            set
            {
                if ((this._DEPT_NAME != value))
                {
                    this._DEPT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ROLE_NAME", DbType = "VarChar(MAX)")]
        public string ROLE_NAME
        {
            get
            {
                return this._ROLE_NAME;
            }
            set
            {
                if ((this._ROLE_NAME != value))
                {
                    this._ROLE_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX)")]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX)")]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this._VAR_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_NOTE", DbType = "VarChar(MAX)")]
        public string EMP_NOTE
        {
            get
            {
                return this._EMP_NOTE;
            }
            set
            {
                if ((this._EMP_NOTE != value))
                {
                    this._EMP_NOTE = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPSKILL_SELECTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _SKILL_ID;

        private string _SKILL_NAME;

        private System.Nullable<bool> _ON_TRAINING;

        private System.Nullable<int> _ID;

        private System.Nullable<int> _EMP_ID;

        public FnTEMPSKILL_SELECTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_ID", DbType = "Int")]
        public System.Nullable<int> SKILL_ID
        {
            get
            {
                return this._SKILL_ID;
            }
            set
            {
                if ((this._SKILL_ID != value))
                {
                    this._SKILL_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SKILL_NAME", DbType = "VarChar(MAX)")]
        public string SKILL_NAME
        {
            get
            {
                return this._SKILL_NAME;
            }
            set
            {
                if ((this._SKILL_NAME != value))
                {
                    this._SKILL_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ON_TRAINING", DbType = "Bit")]
        public System.Nullable<bool> ON_TRAINING
        {
            get
            {
                return this._ON_TRAINING;
            }
            set
            {
                if ((this._ON_TRAINING != value))
                {
                    this._ON_TRAINING = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int")]
        public System.Nullable<int> EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPTRAINING_SELECTEResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _ID;

        private System.Nullable<int> _EMP_ID;

        private System.Nullable<int> _SW_ID;

        private System.Nullable<int> _SW_LEVEL;

        private System.Nullable<System.DateTime> _VALIDDATE;

        private string _VALIDNOTE;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        private string _SHIFT_NAME;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private System.Nullable<int> _SW_ISSUE;

        private System.Nullable<System.DateTime> _SW_ISSUEDATE;

        private string _SW_RA;

        private string _VAR_NAME;

        private System.Nullable<int> _SW_CRITERIA;

        public FnTEMPTRAINING_SELECTEResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int")]
        public System.Nullable<int> EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int")]
        public System.Nullable<int> SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this._SW_LEVEL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this._VALIDDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDNOTE", DbType = "VarChar(MAX)")]
        public string VALIDNOTE
        {
            get
            {
                return this._VALIDNOTE;
            }
            set
            {
                if ((this._VALIDNOTE != value))
                {
                    this._VALIDNOTE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX)")]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this._EMP_FNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX)")]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this._EMP_LNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "Char(1)")]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this._EMP_INITIAL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX)")]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(MAX)")]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX)")]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int")]
        public System.Nullable<int> SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this._SW_ISSUE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this._SW_ISSUEDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)")]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this._SW_RA = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX)")]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this._VAR_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CRITERIA", DbType = "Int")]
        public System.Nullable<int> SW_CRITERIA
        {
            get
            {
                return this._SW_CRITERIA;
            }
            set
            {
                if ((this._SW_CRITERIA != value))
                {
                    this._SW_CRITERIA = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPTRAINING_SELECTSResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _ID;

        private System.Nullable<int> _EMP_ID;

        private System.Nullable<int> _SW_ID;

        private System.Nullable<int> _SW_LEVEL;

        private System.Nullable<System.DateTime> _VALIDDATE;

        private string _VALIDNOTE;

        private string _EMP_FNAME;

        private string _EMP_LNAME;

        private string _EMP_INITIAL;

        private string _SHIFT_NAME;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private System.Nullable<int> _SW_ISSUE;

        private System.Nullable<System.DateTime> _SW_ISSUEDATE;

        private string _SW_RA;

        private string _VAR_NAME;

        private System.Nullable<int> _SW_CRITERIA;

        public FnTEMPTRAINING_SELECTSResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_ID", DbType = "Int")]
        public System.Nullable<int> EMP_ID
        {
            get
            {
                return this._EMP_ID;
            }
            set
            {
                if ((this._EMP_ID != value))
                {
                    this._EMP_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_LEVEL", DbType = "Int")]
        public System.Nullable<int> SW_LEVEL
        {
            get
            {
                return this._SW_LEVEL;
            }
            set
            {
                if ((this._SW_LEVEL != value))
                {
                    this._SW_LEVEL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> VALIDDATE
        {
            get
            {
                return this._VALIDDATE;
            }
            set
            {
                if ((this._VALIDDATE != value))
                {
                    this._VALIDDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VALIDNOTE", DbType = "VarChar(MAX)")]
        public string VALIDNOTE
        {
            get
            {
                return this._VALIDNOTE;
            }
            set
            {
                if ((this._VALIDNOTE != value))
                {
                    this._VALIDNOTE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_FNAME", DbType = "VarChar(MAX)")]
        public string EMP_FNAME
        {
            get
            {
                return this._EMP_FNAME;
            }
            set
            {
                if ((this._EMP_FNAME != value))
                {
                    this._EMP_FNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_LNAME", DbType = "VarChar(MAX)")]
        public string EMP_LNAME
        {
            get
            {
                return this._EMP_LNAME;
            }
            set
            {
                if ((this._EMP_LNAME != value))
                {
                    this._EMP_LNAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMP_INITIAL", DbType = "Char(1)")]
        public string EMP_INITIAL
        {
            get
            {
                return this._EMP_INITIAL;
            }
            set
            {
                if ((this._EMP_INITIAL != value))
                {
                    this._EMP_INITIAL = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SHIFT_NAME", DbType = "VarChar(MAX)")]
        public string SHIFT_NAME
        {
            get
            {
                return this._SHIFT_NAME;
            }
            set
            {
                if ((this._SHIFT_NAME != value))
                {
                    this._SHIFT_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(MAX)")]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX)")]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int")]
        public System.Nullable<int> SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this._SW_ISSUE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this._SW_ISSUEDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)")]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this._SW_RA = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VAR_NAME", DbType = "VarChar(MAX)")]
        public string VAR_NAME
        {
            get
            {
                return this._VAR_NAME;
            }
            set
            {
                if ((this._VAR_NAME != value))
                {
                    this._VAR_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CRITERIA", DbType = "Int")]
        public System.Nullable<int> SW_CRITERIA
        {
            get
            {
                return this._SW_CRITERIA;
            }
            set
            {
                if ((this._SW_CRITERIA != value))
                {
                    this._SW_CRITERIA = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPTRAININGROLEFILTERResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _SW_ID;

        public FnTEMPTRAININGROLEFILTERResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTEMPTRAININGSKILLFILTERResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _SW_ID;

        public FnTEMPTRAININGSKILLFILTERResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTSORTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _ITEM_ID;

        private string _ITEM_NAME;

        private System.Nullable<int> _ITEM_SORT;

        public FnTSORTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ITEM_ID", DbType = "Int")]
        public System.Nullable<int> ITEM_ID
        {
            get
            {
                return this._ITEM_ID;
            }
            set
            {
                if ((this._ITEM_ID != value))
                {
                    this._ITEM_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ITEM_NAME", DbType = "VarChar(MAX)")]
        public string ITEM_NAME
        {
            get
            {
                return this._ITEM_NAME;
            }
            set
            {
                if ((this._ITEM_NAME != value))
                {
                    this._ITEM_NAME = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ITEM_SORT", DbType = "Int")]
        public System.Nullable<int> ITEM_SORT
        {
            get
            {
                return this._ITEM_SORT;
            }
            set
            {
                if ((this._ITEM_SORT != value))
                {
                    this._ITEM_SORT = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTSTANDARDWORK_LISTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _SW_ID;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private System.Nullable<int> _SW_ISSUE;

        private System.Nullable<System.DateTime> _SW_ISSUEDATE;

        private string _SW_RA;

        public FnTSTANDARDWORK_LISTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(15)")]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX)")]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int")]
        public System.Nullable<int> SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this._SW_ISSUE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this._SW_ISSUEDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)")]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this._SW_RA = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTSTANDARDWORK_LOGResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private string _Table;

        private string _Action;

        private string _Detail;

        private System.Nullable<System.DateTime> _TimeStamp;

        public FnTSTANDARDWORK_LOGResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Table", DbType = "VarChar(MAX)")]
        public string Table
        {
            get
            {
                return this._Table;
            }
            set
            {
                if ((this._Table != value))
                {
                    this._Table = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Action", DbType = "VarChar(1)")]
        public string Action
        {
            get
            {
                return this._Action;
            }
            set
            {
                if ((this._Action != value))
                {
                    this._Action = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Detail", DbType = "VarChar(MAX)")]
        public string Detail
        {
            get
            {
                return this._Detail;
            }
            set
            {
                if ((this._Detail != value))
                {
                    this._Detail = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeStamp", DbType = "DateTime")]
        public System.Nullable<System.DateTime> TimeStamp
        {
            get
            {
                return this._TimeStamp;
            }
            set
            {
                if ((this._TimeStamp != value))
                {
                    this._TimeStamp = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class FnTSTANDARDWORK_SELECTResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _SW_ID;

        private string _SW_CODE;

        private string _SW_DESCRIPTION;

        private System.Nullable<int> _SW_ISSUE;

        private System.Nullable<System.DateTime> _SW_ISSUEDATE;

        private string _SW_RA;

        public FnTSTANDARDWORK_SELECTResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ID", DbType = "Int")]
        public System.Nullable<int> SW_ID
        {
            get
            {
                return this._SW_ID;
            }
            set
            {
                if ((this._SW_ID != value))
                {
                    this._SW_ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_CODE", DbType = "VarChar(MAX)")]
        public string SW_CODE
        {
            get
            {
                return this._SW_CODE;
            }
            set
            {
                if ((this._SW_CODE != value))
                {
                    this._SW_CODE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_DESCRIPTION", DbType = "VarChar(MAX)")]
        public string SW_DESCRIPTION
        {
            get
            {
                return this._SW_DESCRIPTION;
            }
            set
            {
                if ((this._SW_DESCRIPTION != value))
                {
                    this._SW_DESCRIPTION = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUE", DbType = "Int")]
        public System.Nullable<int> SW_ISSUE
        {
            get
            {
                return this._SW_ISSUE;
            }
            set
            {
                if ((this._SW_ISSUE != value))
                {
                    this._SW_ISSUE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_ISSUEDATE", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SW_ISSUEDATE
        {
            get
            {
                return this._SW_ISSUEDATE;
            }
            set
            {
                if ((this._SW_ISSUEDATE != value))
                {
                    this._SW_ISSUEDATE = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SW_RA", DbType = "VarChar(MAX)")]
        public string SW_RA
        {
            get
            {
                return this._SW_RA;
            }
            set
            {
                if ((this._SW_RA != value))
                {
                    this._SW_RA = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class Sp_helpdiagramdefinitionResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<int> _Version;

        private System.Data.Linq.Binary _Definition;

        public Sp_helpdiagramdefinitionResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "version", Storage = "_Version", DbType = "Int")]
        public System.Nullable<int> Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                if ((this._Version != value))
                {
                    this._Version = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "definition", Storage = "_Definition", DbType = "VarBinary(MAX)", CanBeNull = true)]
        public System.Data.Linq.Binary Definition
        {
            get
            {
                return this._Definition;
            }
            set
            {
                if ((this._Definition != value))
                {
                    this._Definition = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class Sp_helpdiagramsResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private string _Database;

        private string _Name;

        private System.Nullable<int> _ID;

        private string _Owner;

        private System.Nullable<int> _OwnerID;

        public Sp_helpdiagramsResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Database", DbType = "NVarChar(128)")]
        public string Database
        {
            get
            {
                return this._Database;
            }
            set
            {
                if ((this._Database != value))
                {
                    this._Database = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(128)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this._Name = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int")]
        public System.Nullable<int> ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Owner", DbType = "NVarChar(128)")]
        public string Owner
        {
            get
            {
                return this._Owner;
            }
            set
            {
                if ((this._Owner != value))
                {
                    this._Owner = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OwnerID", DbType = "Int")]
        public System.Nullable<int> OwnerID
        {
            get
            {
                return this._OwnerID;
            }
            set
            {
                if ((this._OwnerID != value))
                {
                    this._OwnerID = value; NotifyPropertyChanged();
                }
            }
        }
    }

    public partial class SplitStringsResult : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        // This method is called by the Set accessor of each property.
        // The CallerMemberName attribute that is applied to the optional propertyName
        // parameter causes the property name of the caller to be substituted as an argument.
        private void NotifyPropertyChanged([CallerMemberName] String propertyName = "")
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        private System.Nullable<long> _Number;

        private string _Item;

        public SplitStringsResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Number", DbType = "BigInt")]
        public System.Nullable<long> Number
        {
            get
            {
                return this._Number;
            }
            set
            {
                if ((this._Number != value))
                {
                    this._Number = value; NotifyPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Item", DbType = "NVarChar(MAX)")]
        public string Item
        {
            get
            {
                return this._Item;
            }
            set
            {
                if ((this._Item != value))
                {
                    this._Item = value; NotifyPropertyChanged();
                }
            }
        }
    }
}
#pragma warning restore 1591