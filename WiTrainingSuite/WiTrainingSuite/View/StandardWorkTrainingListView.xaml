<UserControl x:Class="WiTrainingSuite.View.StandardWorkTrainingListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WiTrainingSuite.View"
             xmlns:rx="http://reactiveui.net"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:m="http://metro.mahapps.com/winfx/xaml/controls">
    <md:Card Margin="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <md:Card.Content>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition />
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <UniformGrid Columns="5" Grid.Row="0">
                    <Label Margin="4 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <TextBlock TextAlignment="Center" FontWeight="Bold">
                            <Run Text="{Binding Path=StandardWork.SW_CODE, UpdateSourceTrigger=PropertyChanged}"/>
                            <Run Text="{Binding Path=StandardWork.SW_DESCRIPTION, UpdateSourceTrigger=PropertyChanged}"/>
                        </TextBlock>
                    </Label>
                    <Button Margin="2 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding FLevelCommand}">Level Filter</Button>
                    <Button Margin="2 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding FVarCommand}">Variant Filter</Button>
                    <Button Margin="2 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding FShiftCommand}">Shift Filter</Button>
                    <Button Margin="2 4 4 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Command="{Binding FClearCommand}">Clear All</Button>
                </UniformGrid>
                <ProgressBar Grid.Row="1" IsIndeterminate="True" Visibility="{Binding bWorking, Converter={StaticResource BoolVis}, UpdateSourceTrigger=PropertyChanged}"/>
                <Grid Grid.Row="2">
                    <md:DrawerHost IsTopDrawerOpen="{Binding IsTopOpen, UpdateSourceTrigger=PropertyChanged}" TopDrawerBackground="Transparent">
                        <md:DrawerHost.TopDrawerContent>
                            <Grid Height="200">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1" Background="{DynamicResource MaterialDesignPaper}" Visibility="{Binding bLevel, Converter={StaticResource BoolVis}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="22"/>
                                    </Grid.RowDefinitions>
                                    <ListBox ItemsSource="{Binding LevelList}" Grid.Row="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <CheckBox TextBlock.TextAlignment="Center" HorizontalContentAlignment="Left" Content="{Binding LABEL, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding ISTICKED, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <UniformGrid Columns="3" Grid.Row="1" HorizontalAlignment="Right" Margin="1">
                                        <Label Height="20" Width="20"/>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FLevelApplyCommand}" ToolTip="Selected Skill(s)" Margin="1 0 1 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_filter}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FLevelClearCommand}" ToolTip="Show All" Margin="1 0 2 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_greek_sigma_uppercase}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </UniformGrid>
                                </Grid>
                                <Grid Grid.Column="2" Background="{DynamicResource MaterialDesignPaper}" Visibility="{Binding bVar, Converter={StaticResource BoolVis}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="22"/>
                                    </Grid.RowDefinitions>
                                    <ListBox ItemsSource="{Binding VarList}" Grid.Row="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <CheckBox TextBlock.TextAlignment="Center" HorizontalContentAlignment="Left" Content="{Binding LABEL, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding ISTICKED, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <UniformGrid Columns="3" Grid.Row="1" HorizontalAlignment="Right" Margin="1">
                                        <Label Height="20" Width="20"/>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FVarApplyCommand}" ToolTip="Selected Variant(s)" Margin="1 0 1 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_filter}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FVarClearCommand}" ToolTip="Show All" Margin="1 0 2 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_greek_sigma_uppercase}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </UniformGrid>
                                </Grid>
                                <Grid Grid.Column="3" Background="{DynamicResource MaterialDesignPaper}" Visibility="{Binding bShift, Converter={StaticResource BoolVis}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="22"/>
                                    </Grid.RowDefinitions>
                                    <ListBox ItemsSource="{Binding ShiftList}" Grid.Row="0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <CheckBox TextBlock.TextAlignment="Center" HorizontalContentAlignment="Left" Content="{Binding LABEL, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding ISTICKED, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <UniformGrid Columns="3" Grid.Row="1" HorizontalAlignment="Right" Margin="1">
                                        <Label Height="20" Width="20"/>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FShiftApplyCommand}" ToolTip="Selected Skill(s)" Margin="1 0 1 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_filter}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding FShiftClearCommand}" ToolTip="Show All" Margin="1 0 2 0">
                                            <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Visual="{StaticResource appbar_greek_sigma_uppercase}"/>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </UniformGrid>
                                </Grid>
                            </Grid>
                        </md:DrawerHost.TopDrawerContent>
                        <DataGrid AutoGenerateColumns="False" 
                                  IsReadOnly="True" SelectionMode="Single" 
                                  SelectedItem="{Binding SelectedTraining}" ItemsSource="{Binding TrainingList}"
                                  SelectedIndex="{Binding TrainingIndex, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="First Name" Binding="{Binding EMP_FNAME}" Width="8*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Last Name" Binding="{Binding EMP_LNAME}" Width="8*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Variant" Binding="{Binding VAR_NAME}" Width="8*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Shift" Binding="{Binding SHIFT_NAME}" Width="4*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Level" Binding="{Binding SW_LEVEL}" Width="4*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Gray"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Green"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Red"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Green"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Magenta"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Blue"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Cyan"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Valid Date" Binding="{Binding VALIDDATE}" Width="8*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Note" Binding="{Binding VALIDNOTE}" Width="8*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </md:DrawerHost>
                </Grid>
                <UniformGrid Columns="5" Grid.Row="3">
                    <Button Margin="4 4 2 4"  Command="{Binding BackCommand}">Back</Button>
                    <Label Margin="2 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <TextBlock TextAlignment="Center">
                            <Run>Row Count:</Run>
                            <Run Text="{Binding Path=TrainingList.Count, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </TextBlock>
                    </Label>
                    <Label Margin="2 4 2 4"></Label>
                    <Label Margin="2 4 2 4"></Label>
                    <Label Margin="2 4 4 4"></Label>
                </UniformGrid>
            </Grid>
        </md:Card.Content>
    </md:Card>
</UserControl>

