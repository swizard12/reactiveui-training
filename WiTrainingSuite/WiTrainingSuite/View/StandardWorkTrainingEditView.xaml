<UserControl x:Class="WiTrainingSuite.View.StandardWorkTrainingEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WiTrainingSuite.View"
             xmlns:rx="http://reactiveui.net"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:m="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cmd="http://www.galasoft.ch/mvvmlight">
    <md:Card Margin="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <md:Card.Content>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition />
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <UniformGrid Columns="5" Grid.Row="0">
                    <Label Margin="4 4 2 4" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <TextBlock TextAlignment="Center" FontWeight="Bold" TextWrapping="Wrap">
                            <Run Text="{Binding Path=StandardWork.SW_CODE, UpdateSourceTrigger=PropertyChanged}"/>
                            <Run Text="{Binding Path=StandardWork.SW_DESCRIPTION, UpdateSourceTrigger=PropertyChanged}"/>
                        </TextBlock>
                    </Label>
                </UniformGrid>
                <ProgressBar Grid.Row="1" IsIndeterminate="True" Visibility="{Binding bWorking, Converter={StaticResource BoolVis}, UpdateSourceTrigger=PropertyChanged}"/>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <TextBox VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Grid.Column="0" Margin="2.5" Text="{Binding fEMP, UpdateSourceTrigger=PropertyChanged}" md:HintAssist.Hint="Employee Filter"/>
                            <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFloatingActionButton}" Height="20" Width="20" Command="{Binding ClearEMPFilter}">
                                <Rectangle Width="10" Height="10" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Visual="{StaticResource appbar_close}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </Grid>
                        <DataGrid Grid.Row="1" 
                                  ItemsSource="{Binding EmployeeList}" 
                                  SelectedIndex="{Binding EmployeeIndex, UpdateSourceTrigger=PropertyChanged}" 
                                  SelectedItem="{Binding SelectedEmployee, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" IsReadOnly="True" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="First Name" Binding="{Binding EMP_FNAME}" Width="2*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Last Name" Binding="{Binding EMP_LNAME}" Width="2*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Variant" Binding="{Binding VAR_NAME}" Width="2*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Shift" Binding="{Binding SHIFT_NAME}" Width="2*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Level" SortMemberPath="SW_LEVEL">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Gray"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Green"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="0"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Red"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Green"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="1"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Yellow"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="0"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Magenta"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Blue"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=SW_CRITERIA}" Value="2"/>
                                                        <Condition Binding="{Binding Path=SW_LEVEL}" Value="2"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="Cyan"/>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Valid Date" Width="2*">
                                    <DataGridTextColumn.Binding>
                                        <Binding Path="VALIDDATE" StringFormat="{}{0:dd MMMM yyyy}"/>
                                    </DataGridTextColumn.Binding>
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <StackPanel Grid.Column="1" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button Height="40" Margin="2" Command="{Binding QueueAddCommand}">&gt;</Button>
                        <Button Height="40" Margin="2" Command="{Binding QueueDelCommand}">&lt;</Button>
                    </StackPanel>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderBrush="Red">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DateSet}" Value="False">
                                            <Setter Property="BorderThickness" Value="2"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DateSet}" Value="True">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <DockPanel>
                                <Label VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Width="100">Training Date</Label>
                                <DatePicker SelectedDate="{Binding VALID_DATE, UpdateSourceTrigger=LostFocus}" Grid.Column="1" VerticalContentAlignment="Center" SelectedDateFormat="Long" TextBlock.TextAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger>
                                            <cmd:EventToCommand></cmd:EventToCommand>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DatePicker>
                            </DockPanel>
                        </Border>
                        <DataGrid Grid.Row="1" 
                                  ItemsSource="{Binding QueueList}" 
                                  SelectedIndex="{Binding QueueIndex, UpdateSourceTrigger=PropertyChanged}" 
                                  SelectedItem="{Binding SelectedQueue, UpdateSourceTrigger=PropertyChanged}" 
                                  SelectionMode="Single" IsReadOnly="True" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Employee Name" Binding="{Binding Path=EMP_NAME}" Width="1*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment"
                                                    Value="Stretch"/>
                                            <Setter Property="TextBlock.TextAlignment"
                                                    Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
                <UniformGrid Columns="5" Grid.Row="3">
                    <Button Margin="4 4 2 4"  Command="{Binding BackCommand}">Back</Button>
                    <Label Margin="2 4 2 4"></Label>
                    <Label Margin="2 4 2 4"></Label>
                    <Label Margin="2 4 2 4"></Label>
                    <Button Margin="2 4 4 4" Command="{Binding SaveCommand}">Save Queue to DB</Button>
                </UniformGrid>
                <md:Snackbar MessageQueue="{Binding SnackBarQueue}" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.RowSpan="2"/>
            </Grid>
        </md:Card.Content>
    </md:Card>
</UserControl>
